<!DOCTYPE html>
<html>
<head>
	<title>Wikipedia Viewer</title>
</head>
<link href='https://fonts.googleapis.com/css?family=Merriweather+Sans:800' rel='stylesheet' type='text/css'>
<link href='https://fonts.googleapis.com/css?family=Merriweather:400,400italic,700' rel='stylesheet' type='text/css'>
<style type="text/css">

a {
    
    color: inherit;
    text-decoration:none;
}



.title{

	font-family: 'Merriweather Sans';
	font-size: 30px;
	font-weight: 800;
	line-height: 38px;
	letter-spacing: -4px;
	

}


.description{

color: #50413c;
	font-family: 'Merriweather';
	font-size: 15px;
	font-weight: 500;
	line-height: 30px;
	margin-bottom: 16px;
	

}
.articleContainer{
position: relative;
	top: 10%;
	left: 15%;
	text-align: center;
	border-radius: 2px 2px 2px 2px;
	-webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    color: #454545;

}

.cardContainer {

 width:70%;
  height:150px;
  float:left;
  background-color:#f6f1ed; 
  margin:10px 10px;
  	-webkit-box-shadow: 13px 18px 115px -27px rgba(0,0,0,0.55);
-moz-box-shadow: 13px 18px 115px -27px rgba(0,0,0,0.55);
box-shadow: 13px 18px 115px -27px rgba(0,0,0,0.55);
cursor: pointer;
}

.cardContainer:hover,.cardContainer:focus {

width:70%;
  height:150px;
  float:left;
  background-color:#f6f1ed; 
  margin:10px 10px;
border-radius: 0px 0px 0px 0px;
-moz-border-radius: 0px 0px 0px 0px;
-webkit-border-radius: 0px 0px 0px 0px;
border: 1px dotted #785964;
cursor: pointer

  	
}

 @media screen and (max-height: 760px) {

.articleContainer{
position: relative;
	top: 25%;
	left: 15%;
	text-align: center;
	border-radius: 2px 2px 2px 2px;
	-webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

}

 html,body {height: 100%;}
            body {padding: 0px; margin:0px; background-color:#D5C7BC

            	; background-position: center; background-size: cover; background-attachment: fixed; background-repeat: no-repeat;}

            .search-wrapper {
                position: absolute;
                -webkit-transform: translate(-50%, -50%);
                -moz-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%);
                margin: 35px;
                left:  48%;
                
            }
            .search-wrapper.active {}

            .search-wrapper .input-holder {
                overflow: hidden;
                height: 70px;
                background: rgba(255,255,255,0);
               
                position: relative;
                width:170px;
                -webkit-transition: all 0.3s ease-in-out;
                -moz-transition: all 0.3s ease-in-out;
                transition: all 0.3s ease-in-out;
            }
            .search-wrapper.active .input-holder {
                color: #785964;
                width:450px;
                border-bottom: solid;
                background: transparent;
                -webkit-transition: all .5s cubic-bezier(0.000, 0.105, 0.035, 1.570);
                -moz-transition: all .5s cubic-bezier(0.000, 0.105, 0.035, 1.570);
                transition: all .5s cubic-bezier(0.000, 0.105, 0.035, 1.570);
            }

            .search-wrapper .input-holder .search-input {
                width:100%;
                height: 50px;
                padding:0px 70px 0 20px;
                opacity: 0;
                position: absolute;
                top:0px;
                left:0px;
                background: transparent;
                -webkit-box-sizing: border-box;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
                border:none;
                outline:none;
                font-family:"Open Sans", Arial, Verdana;
                font-size: 25px;
                font-weight: 400;
                line-height: 20px;
                color:#785964;
                -webkit-transform: translate(0, 60px);
                -moz-transform: translate(0, 60px);
                transform: translate(0, 60px);
                -webkit-transition: all .3s cubic-bezier(0.000, 0.105, 0.035, 1.570);
                -moz-transition: all .3s cubic-bezier(0.000, 0.105, 0.035, 1.570);
                transition: all .3s cubic-bezier(0.000, 0.105, 0.035, 1.570);

                -webkit-transition-delay: 0.3s;
                -moz-transition-delay: 0.3s;
                transition-delay: 0.3s;
            }
            .search-wrapper.active .input-holder .search-input {
                opacity: 1;
                -webkit-transform: translate(0, 10px);
                -moz-transform: translate(0, 10px);
                transform: translate(0, 10px);

            }

            ::placeholder {

            	color: #785964;
            	opacity: 0.7;
            }



input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
    -webkit-animation: autofill 0s forwards;
    animation: autofill 0s forwards;
}

@keyframes autofill {
    100% {
        background: transparent;
        color: inherit;
    }
}

@-webkit-keyframes autofill {
    100% {
        background: transparent;
        color: inherit;
    }
}

            .search-wrapper .input-holder .search-icon {
                width:70px;
                height:70px;
                border:none;
                border-radius:50px;
                background: #D5C7BC;
                padding:0px;
                outline:none;
                position: relative;
                z-index: 2;
                float:right;
                cursor: pointer;
                -webkit-transition: all 0.3s ease-in-out;
                -moz-transition: all 0.3s ease-in-out;
                transition: all 0.3s ease-in-out;
            }
            .search-wrapper.active .input-holder .search-icon {
                width: 50px;
                height:50px;
                margin: 10px;
                border-radius: 30px;
            }
            .search-wrapper .input-holder .search-icon span {
                width:22px;
                height:22px;
                display: inline-block;
                vertical-align: middle;
                position:relative;
                -webkit-transform: rotate(45deg);
                -moz-transform: rotate(45deg);
                transform: rotate(45deg);
                -webkit-transition: all .4s cubic-bezier(0.650, -0.600, 0.240, 1.650);
                -moz-transition: all .4s cubic-bezier(0.650, -0.600, 0.240, 1.650);
                transition: all .4s cubic-bezier(0.650, -0.600, 0.240, 1.650);

            }
            .search-wrapper.active .input-holder .search-icon span {
                -webkit-transform: rotate(-45deg);
                -moz-transform: rotate(-45deg);
                transform: rotate(-45deg);
            }
            .search-wrapper .input-holder .search-icon span::before, .search-wrapper .input-holder .search-icon span::after {
                position: absolute;
                content:'';
            }
            .search-wrapper .input-holder .search-icon span::before {
                width: 4px;
                height: 11px;
                left: 9px;
                top: 18px;
                border-radius: 2px;
                background: #785964;
            }
            .search-wrapper .input-holder .search-icon span::after {
                width: 14px;
                height: 14px;
                left: 0px;
                top: 0px;
                border-radius: 16px;
                border: 4px solid #785964;
            }

            .search-wrapper .close {
                position: absolute;
                z-index: 1;
                top:24px;
                right:20px;
                width:25px;
                height:25px;
                cursor: pointer;
                -webkit-transform: rotate(-180deg);
                -moz-transform: rotate(-180deg);
                transform: rotate(-180deg);
                -webkit-transition: all .3s cubic-bezier(0.285, -0.450, 0.935, 0.110);
                -moz-transition: all .3s cubic-bezier(0.285, -0.450, 0.935, 0.110);
                transition: all .3s cubic-bezier(0.285, -0.450, 0.935, 0.110);
                -webkit-transition-delay: 0.2s;
                -moz-transition-delay: 0.2s;
                transition-delay: 0.2s;
            }
            .search-wrapper.active .close {
                right:-50px;
                -webkit-transform: rotate(45deg);
                -moz-transform: rotate(45deg);
                transform: rotate(45deg);
                -webkit-transition: all .6s cubic-bezier(0.000, 0.105, 0.035, 1.570);
                -moz-transition: all .6s cubic-bezier(0.000, 0.105, 0.035, 1.570);
                transition: all .6s cubic-bezier(0.000, 0.105, 0.035, 1.570);
                -webkit-transition-delay: 0.5s;
                -moz-transition-delay: 0.5s;
                transition-delay: 0.5s;
            }
            .search-wrapper .close::before, .search-wrapper .close::after {
                position:absolute;
                content:'';
                background: #785964;
                border-radius: 2px;
            }
            .search-wrapper .close::before {
                width: 5px;
                height: 25px;
                left: 10px;
                top: 0px;
            }
            .search-wrapper .close::after {
                width: 25px;
                height: 5px;
                left: 0px;
                top: 10px;
            }
            .search-wrapper .result-container {
                width: 100%;
                position: absolute;
                top:80px;
                text-align: center;
                font-family: "Open Sans", Arial, Verdana;
                font-size: 18px;
                display:none;
                color:white;
            }


            @media screen and (max-width: 560px) {
                .search-wrapper.active .input-holder {width:200px;}
            }



.Iam {
  position: relative;
  margin: 20px;
   padding: 5px;
  font: normal 40px/50px Montserrat, sans-serif;
 
  font-size: 60px;
font-family: 'Futura';
text-shadow: 0 0 5px #785964, 0 0 10px #785964, 0 0 20px #785964, 0 0 30px #785964, 0 0 40px #fff, 0 0 55px #fff, 0 0 75px #fff;
text-align: center;

}

.Iam p {
  position: relative;
  margin: 20px;
   
  font: normal 10px/15px Montserrat, sans-serif;
 
  font-size: 20px;
font-family: 'Futura';
text-shadow: 0 0 5px #785964;
text-align: center;

}

.Iam b {
  position: relative;
  margin: 10px;
   
  font: normal 10px/15px Montserrat, sans-serif;
 
  font-size: 20px;
font-family: 'Futura';
text-shadow: 0 0 5px #785964;
text-align: center;

}

.Iam b:hover {
  position: relative;
  margin: 10px;
  cursor: pointer;
  font: normal 10px/15px Montserrat, sans-serif;
 
  font-size: 20px;
font-family: 'Futura';
text-shadow: 0 0 5px #785964, 0 0 10px #785964, 0 0 20px #785964, 0 0 30px #785964, 0 0 40px #fff, 0 0 55px #fff, 0 0 75px #fff;
text-align: center;

}



@import 'https://fonts.googleapis.com/css?family=Roboto+Mono:100'
html, body {
  font-family :'Roboto Mono', monospace;
  background : #212121;
  height :100%;

  }
.container{
   position: fixed;
    bottom: 5%;
    width: 100%;
    left: 90%;

  }

.text{
  font-weight: 600;
  font-size:18px;
  color :#785964;

  }
.dud{
  color: #454545;
}

</style>
<body>

<div class="Iam">Wikipedia Viewer

<p>Click on search for your query</p>

<p>or <b><a href="https://en.wikipedia.org/wiki/Special:Random">Here</a></b> for a Random one</p>


</div>

	 <form onsubmit="submitFn(this, event);">
            <div class="search-wrapper">
                <div class="input-holder">
                	
                    <input type="text" class="search-input" id="mySearch" placeholder="Type to search" />
                    <button class="search-icon" id="search" onclick="searchToggle(this, event);"><span></span></button>
                </div>
                <span class="close" onclick="searchToggle(this, event);"></span>

             

                </div>

            
        </form>
        <div class="articleContainer">
   <div class="result-container" id="article"></div>
   </div>
       <div class="container">

	<div class="text"></div>
 </div> 

	<script
	src="https://code.jquery.com/jquery-3.3.1.js"
	integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
	crossorigin="anonymous"></script>

	<script type="text/javascript">
		
        


		$("#search").on("click", function(){

			var mySearch = $("#mySearch").val();

			$.ajax({
				type: "GET",
				url: "https://en.wikipedia.org/w/api.php?action=opensearch&search="+ mySearch + "&format=json&callback=?",
				contentType: "application/json; charset=utf-8",
				async: false,
				dataType: "json",
				success:function(data , status , jqXHR){

                   $("#article").empty(); 

					for(var i=0 ; i <= data[1].length - 1 ; i++ ){ 

						var link = data[3][i];

						function redirect()
                         {
                        var url = link;
                       window.location(url);
                          }

						$("#article").append("<a href = "+data[3][i]+" >"+"<div class='cardContainer' onclick = 'redirect()' >" + "<div class = 'title'> " + data[1][i] + "</div>"+ "<br>" + "<div class='description' >" + data[2][i] + "</div>" + "<br>" + "</div>"+"</a>");
					}

             

				}

			})
		})



  function searchToggle(obj, evt){
            var container = $(obj).closest('.search-wrapper');

            if(!container.hasClass('active')){
                  container.addClass('active');
                  evt.preventDefault();
            }
            else if(container.hasClass('active') && $(obj).closest('.input-holder').length == 0){
                  container.removeClass('active');
                  // clear input
                  container.find('.search-input').val('');
                  // clear and hide result container when we press close
                  container.find('.result-container').fadeOut(100, function(){$(this).empty();});
            }
        }

        function submitFn(obj, evt){
            value = $(obj).find('.search-input').val().trim();

            _html = "Yup yup! Your search text sounds like this: ";
            if(!value.length){
                _html = "Yup yup! Add some text friend :D";
            }
            else{
                _html += "<b>" + value + "</b>";
            }

            $(obj).find('.result-container').html('<span>' + _html + '</span>');
            $(obj).find('.result-container').fadeIn(100);

            evt.preventDefault();
        }


class TextScramble {
  constructor(el) {
    this.el = el
    this.chars = '!<>-_\\/[]{}—=+*^?#________'
    this.update = this.update.bind(this)
  }
  setText(newText) {
    const oldText = this.el.innerText
    const length = Math.max(oldText.length, newText.length)
    const promise = new Promise((resolve) => this.resolve = resolve)
    this.queue = []
    for (let i = 0; i < length; i++) {
      const from = oldText[i] || ''
      const to = newText[i] || ''
      const start = Math.floor(Math.random() * 40)
      const end = start + Math.floor(Math.random() * 40)
      this.queue.push({ from, to, start, end })
    }
    cancelAnimationFrame(this.frameRequest)
    this.frame = 0
    this.update()
    return promise
  }
  update() {
    let output = ''
    let complete = 0
    for (let i = 0, n = this.queue.length; i < n; i++) {
      let { from, to, start, end, char } = this.queue[i]
      if (this.frame >= end) {
        complete++
        output += to
      } else if (this.frame >= start) {
        if (!char || Math.random() < 0.28) {
          char = this.randomChar()
          this.queue[i].char = char
        }
        output += `<span class="dud">${char}</span>`
      } else {
        output += from
      }
    }
    this.el.innerHTML = output
    if (complete === this.queue.length) {
      this.resolve()
    } else {
      this.frameRequest = requestAnimationFrame(this.update)
      this.frame++
    }
  }
  randomChar() {
    return this.chars[Math.floor(Math.random() * this.chars.length)]
  }
}

const phrases = [
  'Made by',
  'Edri Çabiri',
  'Katana22'
]

const el = document.querySelector('.text')
const fx = new TextScramble(el)

let counter = 0
const next = () => {
  fx.setText(phrases[counter]).then(() => {
    setTimeout(next, 800)
  })
  counter = (counter + 1) % phrases.length
}

next()


	</script>

</body>
</html>
